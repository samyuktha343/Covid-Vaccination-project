# -*- coding: utf-8 -*-
"""covidproject.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19zYcRF6xQKqEgK1G-LMpSJVbz9xc0W77
"""

#COVID VACCINATIONS DATA SCIENCE PROJECT
#IMPORTING THE NECESSARY PACKAGES
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

#LOADING THE DATASET
data=pd.read_csv('/CovidVaccinations2023 (1).csv')

#VIEWING THE CONTENTS OF DATA
data.head()

data.tail()

data.head(15)

data.tail(17)

#DATA PREPROCESSING AND EXPLORATORY DATA ANALYSIS(EDA)
#USING SET OPTIONS
pd.set_option('display.max_columns',4)
data.head()

#TYPE OF DATASET
type(data)

#INFORMATION ABOUT DATA
data.info()

#VIEWING THE COLUMN NAMES
list(data.columns)

#SHAPE OF DATASET
data.shape

#VIEWING DATA USING SLICING
data[0:100]

#VIEWING PARTICULAR COLUMN USING SLICING
data['Country'][0:10]

#FOR VIEWING TOP 10
top_10=data.head(10)
top_10

#TO KNOW THECOUNT OF VALUES
data.Vaccinated.value_counts()

data.DosesAdministeredTotal.value_counts()

#USING NORMALIZATION
data.FullyVaccinated.value_counts(normalize=True)

data.FullyVaccinated.value_counts(normalize=True)*100

#DROPPING THE COLUMN BY CREATING NEW VARIABLE
covid_data=data.drop(['AdditionalDosesPer100people'],axis=1)

covid_data.head()

covid_data.info() #one column named AdditionalDosesPer100peple is dropped in covid_data dataset

covid_data=data.drop([3],axis=0)#dropping one row in datset
covid_data.head()

covid_data.info()#thereis only 187 one entry hasbeen dropped

covid_data=data.drop([180],axis=0)#180th row is dropped

covid_data.tail(10)

#VISUALIZING THE DATA
sns.countplot(data['DosesAdministeredTotal'])
plt.show()

data['DosesAdministeredPer100people'].plot.hist()

#USING VARIOUS PLOTTING TECHNIQUES
plt.figure(figsize=(20,10))
sns.barplot(x=top_10['Country'],y=top_10['DosesAdministeredTotal'],label='covid_vacciantion')
plt.plot(top_10['Country'],top_10['DosesAdministeredTotal'])
plt.scatter(top_10['Country'],top_10['DosesAdministeredTotal'])
plt.legend(loc=1)
plt.title('COVID VACCINATIONS 2023')
plt.xlabel('COUNTRY')
plt.ylabel('DOSES ADMINISTERED TOTAL')
plt.grid()
plt.show()

#CREATING NEW COLUMN IN DATASET
data['RemainingDosesAdministered']=data['DosesAdministeredTotal']-data['DosesAdministeredPer100people']
data.head()

#APPLYING SOME CONDITIONS TO THE REAL TIME DATASET
data[['Country','Vaccinated','FullyVaccinated']][0:5]

#USING SORTING TECHNIQUES
data[['Country','Vaccinated','FullyVaccinated']].sort_values('Country',ascending=True,kind='heapsort',na_position='first')[0:10]

data[['Country','Vaccinated','FullyVaccinated']].sort_values('Country',ascending=True,kind='stable')[0:5]

data[['Country','Vaccinated','FullyVaccinated']].sort_values('Country',ascending=True,kind='mergesort',na_position='first')[0:5]

data[['Country','Vaccinated','FullyVaccinated']].sort_values('Country',ascending=True,kind='heapsort')[0:5]

#USING GROUPBY AND AGGREGATE FUNCTION
data.groupby('Country')['RemainingDosesAdministered'].mean()

data.groupby('Country')['DosesAdministeredPer100people'].sum()

data.groupby('Country')['Vaccinated'].max()

data.groupby('Country')['FullyVaccinated'].min()

data['RemainingDosesAdministered'].head(15)

(data['DosesAdministeredTotal']>50).head(20)

data[data['DosesAdministeredTotal']>50][['Country','FullyVaccinated']]